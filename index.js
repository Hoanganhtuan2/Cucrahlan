// === index.js ===
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');

// ‚ö†Ô∏è B·∫°n c√≥ th·ªÉ ƒë·ªïi th√†nh bi·∫øn m√¥i tr∆∞·ªùng BOT_TOKEN cho an to√†n
const BOT_TOKEN = process.env.BOT_TOKEN || '8328121313:AAHV9V16SLf17VuT4PZza2lfG49hquIfM6U';

if (!BOT_TOKEN || BOT_TOKEN.length < 30) {
  console.error('‚ùå BOT_TOKEN thi·∫øu ho·∫∑c kh√¥ng h·ª£p l·ªá.');
  process.exit(1);
}

const app = express();
app.use(express.json());

// Kh·ªüi t·∫°o bot (kh√¥ng d√πng polling) ƒë·ªÉ t·ª± x·ª≠ l√Ω update qua webhook
const bot = new TelegramBot(BOT_TOKEN);

// URL public c·ªßa service tr√™n Render (Render t·ª± c·∫•p bi·∫øn n√†y)
const PUBLIC_URL = process.env.PUBLIC_URL || process.env.RENDER_EXTERNAL_URL; // v√≠ d·ª•: https://my-bot.onrender.com
const PORT = process.env.PORT || 10000; // Render s·∫Ω g√°n PORT t·ª± ƒë·ªông

// T·∫°o path webhook ri√™ng v·ªõi token ƒë·ªÉ an to√†n h∆°n
const WEBHOOK_PATH = `/webhook/${BOT_TOKEN.split(':')[0]}`; // v√≠ d·ª•: /webhook/8328121313

// Endpoint ki·ªÉm tra nhanh
app.get('/', (_, res) => {
  res.send('‚úÖ Telegram bot is running.');
});

// Endpoint nh·∫≠n update t·ª´ Telegram
app.post(WEBHOOK_PATH, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

// Logic bot ƒë∆°n gi·∫£n
bot.onText(/^\/start$/, (msg) => {
  const name = msg.from.first_name || 'b·∫°n';
  bot.sendMessage(msg.chat.id, `Ch√†o ${name}!\n\nM√¨nh l√† bot demo ch·∫°y tr√™n Render.\nL·ªánh c√≥ s·∫µn:\n‚Ä¢ /ping ‚Äì ki·ªÉm tra bot s·ªëng\n‚Ä¢ G√µ b·∫•t k·ª≥ ‚Äì bot s·∫Ω echo l·∫°i (tr·ª´ l·ªánh).`);
});

bot.onText(/^\/ping$/, (msg) => {
  bot.sendMessage(msg.chat.id, 'üèì Pong! Bot ƒëang ch·∫°y ·ªïn.');
});

bot.on('message', (msg) => {
  // B·ªè qua n·∫øu l√† l·ªánh
  if (msg.text && msg.text.startsWith('/')) return;
  if (msg.text) {
    bot.sendMessage(msg.chat.id, `B·∫°n v·ª´a n√≥i: \n> ${msg.text}`);
  }
});

async function bootstrap() {
  app.listen(PORT, async () => {
    console.log(`üöÄ Server listening on :${PORT}`);
    if (!PUBLIC_URL) {
      console.warn('‚ö†Ô∏è PUBLIC_URL/RENDER_EXTERNAL_URL ch∆∞a c√≥. H√£y ƒë·∫∑t bi·∫øn PUBLIC_URL = URL Render c·ªßa b·∫°n.');
      return;
    }
    const webhookUrl = `${PUBLIC_URL}${WEBHOOK_PATH}`;
    try {
      await bot.setWebHook(webhookUrl);
      console.log('‚úÖ Webhook set:', webhookUrl);
    } catch (e) {
      console.error('‚ùå Set webhook th·∫•t b·∫°i:', e.message);
    }
  });
}

bootstrap();

/*
=== H∆∞·ªõng d·∫´n Deploy Render (t√≥m t·∫Øt) ===
1) Push 2 file n√†y l√™n GitHub (package.json, index.js).
2) V√†o https://render.com ‚Üí New ‚Üí Web Service ‚Üí ch·ªçn repo.
3) Build Command: npm install
   Start Command: npm start
4) Environment ‚Üí Add:
   - BOT_TOKEN = 8328121313:AAHV9V16SLf17VuT4PZza2lfG49hquIfM6U (khuy√™n d√πng bi·∫øn m√¥i tr∆∞·ªùng thay v√¨ hardcode)
   - (Tu·ª≥ ch·ªçn) PUBLIC_URL = URL c·ªßa service sau khi t·∫°o, v√≠ d·ª• https://ten-bot.onrender.com  
     *Render th∆∞·ªùng t·ª± c·∫•p RENDER_EXTERNAL_URL, n·∫øu c√≥ th√¨ kh√¥ng c·∫ßn PUBLIC_URL*
5) Deploy. Khi service ch·∫°y, log s·∫Ω in ra URL webhook. G·ª≠i /start cho bot ƒë·ªÉ test.
*/
