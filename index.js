const express = require('express');
const TelegramBot = require('node-telegram-bot-api');

// L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng (Render -> Environment)
const BOT_TOKEN = process.env.BOT_TOKEN || '8328121313:AAHV9V16SLf17VuT4PZza2lfG49hquIfM6U';

if (!BOT_TOKEN || BOT_TOKEN.length < 30) {
  console.error('‚ùå BOT_TOKEN thi·∫øu ho·∫∑c kh√¥ng h·ª£p l·ªá.');
  process.exit(1);
}

const app = express();
app.use(express.json());

const bot = new TelegramBot(BOT_TOKEN);

// Render t·ª± c·∫•p URL qua bi·∫øn RENDER_EXTERNAL_URL
const PUBLIC_URL = process.env.PUBLIC_URL || process.env.RENDER_EXTERNAL_URL;
const PORT = process.env.PORT || 10000;

const WEBHOOK_PATH = `/webhook/${BOT_TOKEN.split(':')[0]}`;

app.get('/', (_, res) => {
  res.send('‚úÖ Telegram bot is running.');
});

app.post(WEBHOOK_PATH, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

bot.onText(/^\/start$/, (msg) => {
  const name = msg.from.first_name || 'b·∫°n';
  bot.sendMessage(msg.chat.id, `Ch√†o ${name}! üëã\nM√¨nh l√† bot demo ch·∫°y tr√™n Render.`);
});

bot.onText(/^\/ping$/, (msg) => {
  bot.sendMessage(msg.chat.id, 'üèì Pong! Bot ƒëang ch·∫°y ·ªïn.');
});

bot.on('message', (msg) => {
  if (msg.text && msg.text.startsWith('/')) return;
  if (msg.text) bot.sendMessage(msg.chat.id, `B·∫°n v·ª´a n√≥i:\n> ${msg.text}`);
});

app.listen(PORT, async () => {
  console.log(`üöÄ Server listening on :${PORT}`);
  if (!PUBLIC_URL) {
    console.warn('‚ö†Ô∏è PUBLIC_URL ch∆∞a c√≥, ƒë·ª£i Render c·∫•p RENDER_EXTERNAL_URL...');
    return;
  }
  const webhookUrl = `${PUBLIC_URL}${WEBHOOK_PATH}`;
  try {
    await bot.setWebHook(webhookUrl);
    console.log('‚úÖ Webhook set:', webhookUrl);
  } catch (e) {
    console.error('‚ùå Set webhook th·∫•t b·∫°i:', e.message);
  }
});
